<LogGenius.Core:Window
  x:Class="LogGenius.Modules.Entries.EntriesWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:modernwpf="http://schemas.modernwpf.com/2019"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:LogGenius.Core="clr-namespace:LogGenius.Core;assembly=LogGenius.Core"
  xmlns:LogGenius.Modules.Entries="clr-namespace:LogGenius.Modules.Entries"
  mc:Ignorable="d"
  modernwpf:WindowHelper.UseModernWindowStyle="True"
  modernwpf:TitleBar.ExtendViewIntoTitleBar="True"
  Title="Log Genius: Entries" Height="800" Width="1024"
  DataContext="{x:Static LogGenius.Modules.Entries:EntriesModule.Instance}">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/LogGenius.Core;component/Frame.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <LogGenius.Modules.Entries:GetTitleTextFromExcludingIndex x:Key="GetTitleTextFromExcludingIndex"/>
      <LogGenius.Modules.Entries:GetToggleStateFromExcludingIndex x:Key="GetToggleStateFromExcludingIndex"/>
    </ResourceDictionary>
  </Window.Resources>
  <LogGenius.Core:Frame
    x:Name="PART_Frame"
    WindowTitle="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}"
    WindowActive="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="2*"/>
        <RowDefinition Height="3"/>
        <RowDefinition Height="1*"/>
      </Grid.RowDefinitions>
      <LogGenius.Modules.Entries:EntryGrid
        x:Name="PART_FullEntryGrid"
        Grid.Row="1"
        HighlightText="{x:Null}"
        DataContext="{Binding FullEntriesViewSource.View}"
        />
      <GridSplitter
        Grid.Row="2"
        VerticalAlignment="Stretch"
        HorizontalAlignment="Stretch"
        ResizeBehavior="PreviousAndNext"/>
      <Grid Grid.Row="3">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border
          Grid.Row="0"
          Background="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"
          BorderThickness="0,0,0,1"
          BorderBrush="{DynamicResource SystemControlBackgroundChromeBlackMediumLowBrush}"
          >
          <Grid Margin="12,8">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="8"/>
              <ColumnDefinition Width="1*"/>
              <ColumnDefinition Width="12"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="12"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="12"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock
              Grid.Column="0"
              Text="Text Filter:"
              VerticalAlignment="Center"
              FontSize="{DynamicResource FontSize}"/>
            <modernwpf:AutoSuggestBox
              x:Name="PART_FilterPatternAutoSuggestBox"
              Grid.Column="2"
              Text="{Binding FilterPattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
              FontSize="{DynamicResource FontSize}"
              MinHeight="0"
              VerticalContentAlignment="Center"
              TextChanged="OnFilterPatternAutoSuggestBoxTextChanged"
              SuggestionChosen="OnFilterPatternAutoSuggestBoxSuggestionChosen"
              QuerySubmitted="OnFilterPatternAutoSuggestBoxQuerySubmitted"
              ItemsSource="{Binding FilterPatternSuggestions, Source={x:Static LogGenius.Modules.Entries:EntriesModule.Instance}}"
              >
              <modernwpf:AutoSuggestBox.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                  <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                  <Setter Property="Padding" Value="16,0,6,0"/>
                </Style>
              </modernwpf:AutoSuggestBox.ItemContainerStyle>
              <modernwpf:AutoSuggestBox.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="1*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid
                      Grid.Column="0">
                      <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                    </Grid>
                    <Button
                      Grid.Column="1"
                      Background="Transparent"
                      Command="{Binding DeleteFilterPatternSuggestionCommand, Source={x:Static LogGenius.Modules.Entries:EntriesModule.Instance}}"
                      CommandParameter="{Binding}">
                      <modernwpf:FontIcon Glyph="&#xE74D;" FontSize="16"/>
                    </Button>
                  </Grid>
                </DataTemplate>
              </modernwpf:AutoSuggestBox.ItemTemplate>
              <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                  <i:InvokeCommandAction Command="{Binding FilterPatternChangedCommand}"/>
                </i:EventTrigger>
              </i:Interaction.Triggers>
            </modernwpf:AutoSuggestBox>
            <CheckBox
              Grid.Column="4"
              Content="Case sensitive"
              FontSize="{DynamicResource FontSize}"
              VerticalContentAlignment="Center"
              MinWidth="0"
              IsChecked="{Binding IsCaseSensitive}"/>
            <CheckBox
              Grid.Column="6"
              Content="Regex"
              FontSize="{DynamicResource FontSize}"
              VerticalContentAlignment="Center"
              MinWidth="0"
              IsChecked="{Binding IsRegex}"
              />
            <Grid
              Grid.Column="8">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <ToggleButton
                Grid.Column="0"
                FontSize="{DynamicResource FontSize}"
                x:Name="PART_ExcludeButton"
                >
                <ToggleButton.Content>
                  <Binding Path="ExcludingIndex" Converter="{StaticResource GetTitleTextFromExcludingIndex}" Mode="OneWay"/>
                </ToggleButton.Content>
                <ToggleButton.IsChecked>
                  <Binding Path="ExcludingIndex" Converter="{StaticResource GetToggleStateFromExcludingIndex}" Mode="OneWay"/>
                </ToggleButton.IsChecked>
                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="Checked">
                    <i:InvokeCommandAction Command="{Binding ExcludeExistingCommand}"/>
                  </i:EventTrigger>
                  <i:EventTrigger EventName="Unchecked">
                    <i:InvokeCommandAction Command="{Binding CancelExcludingCommand}"/>
                  </i:EventTrigger>
                </i:Interaction.Triggers>
                <ToggleButton.Style>
                  <Style TargetType="ToggleButton" BasedOn="{StaticResource DefaultToggleButtonStyle}">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsExcluding}" Value="True" >
                        <Setter Property="modernwpf:ControlHelper.CornerRadius" Value="2,0,0,2"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </ToggleButton.Style>
              </ToggleButton>
              <Button
                Grid.Column="1"
                Background="{StaticResource ToggleButtonBackgroundChecked}"
                Foreground="{StaticResource ToggleButtonForegroundChecked}"
                Height="{Binding ActualHeight, ElementName=PART_ExcludeButton}"
                Opacity="0.8"
                >
                <modernwpf:FontIcon
                  Glyph="&#xE72C;"
                  FontSize="{StaticResource FontSize}"
                  />
                <Button.Style>
                  <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                    <Setter Property="modernwpf:ControlHelper.CornerRadius" Value="0,2,2,0"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsExcluding}" Value="False" >
                        <Setter Property="Visibility" Value="Hidden"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Button.Style>
                <Button.Resources>
                  <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{Binding Color, Source={StaticResource ToggleButtonBackgroundCheckedPointerOver}}"/>
                  <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{Binding Color, Source={StaticResource ToggleButtonBorderBrushCheckedPointerOver}}"/>
                  <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="{Binding Color, Source={StaticResource ToggleButtonForegroundCheckedPointerOver}}"/>
                  <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{Binding Color, Source={StaticResource ToggleButtonBackgroundCheckedPressed}}"/>
                  <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{Binding Color, Source={StaticResource ToggleButtonBorderBrushCheckedPressed}}"/>
                  <SolidColorBrush x:Key="ButtonForegroundPressed" Color="{Binding Color, Source={StaticResource ToggleButtonForegroundCheckedPressed}}"/>
                </Button.Resources>
                <i:Interaction.Triggers>
                  <i:EventTrigger EventName="Click">
                    <i:InvokeCommandAction Command="{Binding ReexcludeExistingCommand}"/>
                  </i:EventTrigger>
                </i:Interaction.Triggers>
              </Button>
            </Grid>
          </Grid>
        </Border>
        <LogGenius.Modules.Entries:EntryGrid
          x:Name="PART_FilteredEntryGrid"
          Grid.Row="1"
          HighlightText="{Binding DataContext.FilterPattern, RelativeSource={RelativeSource AncestorType=Window}}"
          HighlightTextCaseSensitiveEnabled="{Binding DataContext.IsCaseSensitive, RelativeSource={RelativeSource AncestorType=Window}}"
          HighlightTextRegexEnabled="{Binding DataContext.IsRegex, RelativeSource={RelativeSource AncestorType=Window}}"
          DataContext="{Binding FilteredEntriesViewSource.View}"
          EntryDoubleClicked="OnFilteredEntryGridEntryDoubleClicked"
          />
      </Grid>
    </Grid>
  </LogGenius.Core:Frame>
</LogGenius.Core:Window>
